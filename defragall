#!/usr/bin/env bash


source gettext.sh

readonly VERSION=1.2
readonly NAME=`basename $0`

export TEXTDOMAIN=$NAME
export TEXTDOMAINDIR="/usr/share/locale"

readonly COLOR_WARN='\e[1;5;91m'
readonly COLOR_NAME='\e[32m'
readonly COLOR_END='\e[0m'
readonly INFO_PREFIX='\e[1;34m::\e[0m'
readonly ERROR_PREFIX='\e[1;91m::\e[0m'


print_version() {
  echo $VERSION
}

print_help() {
  eval_gettext "usage: \$NAME [-n] [-c <algh>] [-f] [-s <start>] [-l <len>] [-t <size>]"; echo
  echo
  gettext "    Defragment all mounted btrfs subvolumes."; echo
  echo
  gettext "    -h                 : print this message"; echo
  gettext "    -v                 : print the program's version"; echo
  gettext "    -n                 : not be verbose"; echo
  gettext "    -c <zlib,lzo,zstd> : compress the file while defragmenting"; echo
  gettext "    -f                 : flush data to disk immediately after defragmenting"; echo
  gettext "    -s <start>         : defragment only from byte onward"; echo
  gettext "    -l <len>           : defragment only up to 'len' bytes"; echo
  gettext "    -t <size>          : target extent 'size' hint"; echo
  echo
  gettext "    see 'btrfs filesystem defragment --help' for more details"; echo
}

get_subvol() {
  echo -e $INFO_PREFIX $(gettext "Getting the list of mounted subvolumes...")
  subvolumespath=(`mount | sed -e '/btrfs/!d' | cut -d ' ' -f 3`)
}

defragall() {
  local logfile="/var/log/${NAME}.log"
  echo -e $INFO_PREFIX $(gettext "Log:") "${COLOR_NAME}$logfile"
  echo -e $INFO_PREFIX $(gettext "Starting the defragmentation process...")

  local qr
  echo -e -n ${COLOR_WARN}$(gettext "Do you want to continue? [N/y]") $COLOR_END
  read -n 1 qr; echo
  if [[ $qr == $(gettext "Y") || $qr == $(gettext "y") ]]; then
    date > $logfile
    for i in $subvolumespath; do
      btrfs filesystem defragment $args $i 2>> $logfile &
      cmdpid=("$cmdpid $!")
    done
    trap 'quit' 2 3
    wait
    echo -e $INFO_PREFIX $(gettext "Defragmentation has been completed")
  fi
}

quit() {
  for i in $cmdpid; do
    if [ -n "`ps -Tr | grep $i`" ]; then
      kill $i
    fi
  done
  kill $$
}


args='-v -r'
while getopts 'hvc:nfs:l:t:' OPT; do
  case $OPT in
    h)
      print_help
      exit 0
      ;;
    v)
      print_version
      exit 0
      ;;
    n)
      args=`echo $args | sed 's/-v//'`
      ;;
    c)
      if [[ $OPTARG == 'lzo' || $OPTARG == 'zstd' || $OPTARG == 'zlib' ]]; then
        args=("$args -c${OPTARG}")
      else
        echo -e "$ERROR_PREFIX ${COLOR_NAME}$OPTARG${COLOR_END}" $(gettext "is not a correct algorithm")
        exit 3
      fi
      ;;
    f)
      args="$args -f"
      ;;
    s)
      args="$args -s $OPTARG"
      ;;
    l)
      args="$args -l $OPTARG"
      ;;
    t)
      args="$args -t $OPTARG"
      ;;
    *)
      exit 2
      ;;
  esac
done

if [ `id -u` -ne 0 ]; then
  echo -e $ERROR_PREFIX $(gettext "This operation must be executed with root rights")
  exit 1
fi
get_subvol
defragall
